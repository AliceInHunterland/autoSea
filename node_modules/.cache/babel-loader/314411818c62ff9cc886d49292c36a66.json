{"ast":null,"code":"var logging = false;\n\nvar customLogger = function customLogger() {};\n\nvar setLogging = function setLogging(_logging) {\n  logging = _logging;\n};\n\nvar setCustomLogger = function setCustomLogger(logger) {\n  customLogger = logger;\n};\n\nvar log = function log(type, message) {\n  customLogger({\n    type: type,\n    message: message\n  });\n\n  if (logging) {\n    console.log(\"[\".concat(type, \"] \").concat(message));\n  }\n};\n\nmodule.exports = {\n  logging: logging,\n  setLogging: setLogging,\n  setCustomLogger: setCustomLogger,\n  log: log\n};","map":{"version":3,"names":["logging","customLogger","setLogging","_logging","setCustomLogger","logger","log","type","message","console","module","exports"],"sources":["/Users/ekaterinapavlova/PycharmProjects/onix/ffmpegwasm.github.io/node_modules/@ffmpeg/ffmpeg/src/utils/log.js"],"sourcesContent":["let logging = false;\nlet customLogger = () => {};\n\nconst setLogging = (_logging) => {\n  logging = _logging;\n};\n\nconst setCustomLogger = (logger) => {\n  customLogger = logger;\n};\n\nconst log = (type, message) => {\n  customLogger({ type, message });\n  if (logging) {\n    console.log(`[${type}] ${message}`);\n  }\n};\n\nmodule.exports = {\n  logging,\n  setLogging,\n  setCustomLogger,\n  log,\n};\n"],"mappings":"AAAA,IAAIA,OAAO,GAAG,KAAd;;AACA,IAAIC,YAAY,GAAG,wBAAM,CAAE,CAA3B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAc;EAC/BH,OAAO,GAAGG,QAAV;AACD,CAFD;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAAY;EAClCJ,YAAY,GAAGI,MAAf;AACD,CAFD;;AAIA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,IAAD,EAAOC,OAAP,EAAmB;EAC7BP,YAAY,CAAC;IAAEM,IAAI,EAAJA,IAAF;IAAQC,OAAO,EAAPA;EAAR,CAAD,CAAZ;;EACA,IAAIR,OAAJ,EAAa;IACXS,OAAO,CAACH,GAAR,YAAgBC,IAAhB,eAAyBC,OAAzB;EACD;AACF,CALD;;AAOAE,MAAM,CAACC,OAAP,GAAiB;EACfX,OAAO,EAAPA,OADe;EAEfE,UAAU,EAAVA,UAFe;EAGfE,eAAe,EAAfA,eAHe;EAIfE,GAAG,EAAHA;AAJe,CAAjB"},"metadata":{},"sourceType":"script"}