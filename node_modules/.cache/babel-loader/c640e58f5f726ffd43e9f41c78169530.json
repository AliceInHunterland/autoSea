{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterinapavlova/PycharmProjects/onix/ffmpegwasm.github.io/src/components/FFmpeg.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet ffmpeg = null;\nconst useStyles = makeStyles({\n  root: {\n    margin: '48px 0px 48px 0px'\n  },\n  progress: {\n    width: '100%'\n  }\n});\n\nconst readFromBlobOrFile = blob => new Promise((resolve, reject) => {\n  const fileReader = new FileReader();\n\n  fileReader.onload = () => {\n    resolve(fileReader.result);\n  };\n\n  fileReader.onerror = _ref => {\n    let {\n      target: {\n        error: {\n          code\n        }\n      }\n    } = _ref;\n    reject(Error(`File could not be read! Code=${code}`));\n  };\n\n  fileReader.readAsArrayBuffer(blob);\n});\n\nfunction CircularProgressWithLabel(props) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"static\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        component: \"div\",\n        color: \"textSecondary\",\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CircularProgressWithLabel;\n\nfunction FFmpeg(_ref2) {\n  _s();\n\n  let {\n    args,\n    inFilename,\n    outFilename,\n    mediaType\n  } = _ref2;\n  const classes = useStyles();\n  const [videoSrc, setVideoSrc] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    if (ffmpeg === null) {\n      ffmpeg = createFFmpeg({\n        log: true,\n        corePath: './static/js/ffmpeg-core.js' // corePath: 'https://unpkg.com/@ffmpeg/core@0.8.3/dist/ffmpeg-core.js',\n\n      });\n    }\n\n    ffmpeg.setLogger(_ref3 => {\n      let {\n        type,\n        message\n      } = _ref3;\n\n      if (type !== 'info') {\n        setMessage(message);\n      }\n    });\n    ffmpeg.setProgress(_ref4 => {\n      let {\n        ratio\n      } = _ref4;\n\n      if (ratio >= 0 && ratio <= 1) {\n        setProgress(ratio * 100);\n      }\n\n      if (ratio === 1) {\n        setTimeout(() => {\n          setProgress(0);\n        }, 1000);\n      }\n    });\n  });\n\n  const onFileUploaded = async _ref5 => {\n    let {\n      target: {\n        files\n      }\n    } = _ref5;\n    const file = new Uint8Array(await readFromBlobOrFile(files[0]));\n    setMessage('Loading FFmpeg.wasm');\n\n    if (!ffmpeg.isLoaded()) {\n      setMessage('Loading ffmpeg.wasm-core, may take few minutes');\n      await ffmpeg.load();\n    }\n\n    ffmpeg.FS('writeFile', inFilename, await fetchFile(file));\n    setMessage('Start to run command');\n    const start = Date.now();\n    await ffmpeg.run(...args);\n    setMessage(`Done in ${Date.now() - start} ms`);\n    const data = ffmpeg.FS('readFile', outFilename);\n    const listDir = ffmpeg.FS(\"readdir\", \"/\");\n    setMessage(listDir);\n    setVideoSrc(URL.createObjectURL(new Blob([data.buffer], {\n      type: mediaType\n    })));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.root,\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    spacing: 2,\n    children: [videoSrc.length === 0 ? null : /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        src: videoSrc,\n        autoPlay: true,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), \",\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: progress !== 0 ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        variant: \"static\",\n        color: \"secondary\",\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        component: \"label\",\n        color: \"secondary\",\n        children: [\"Upload a Video/Audio File\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          style: {\n            display: 'none'\n          },\n          onChange: onFileUploaded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        children: `$ ffmpeg ${args.join(' ')}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FFmpeg, \"BrFKtYid+DWZEpJ4I4fRqlCHIMU=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = FFmpeg;\nexport default FFmpeg;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"FFmpeg\");","map":{"version":3,"names":["React","useState","useEffect","Grid","CircularProgress","Box","Button","Typography","makeStyles","createFFmpeg","fetchFile","ffmpeg","useStyles","root","margin","progress","width","readFromBlobOrFile","blob","Promise","resolve","reject","fileReader","FileReader","onload","result","onerror","target","error","code","Error","readAsArrayBuffer","CircularProgressWithLabel","props","Math","round","value","FFmpeg","args","inFilename","outFilename","mediaType","classes","videoSrc","setVideoSrc","setProgress","message","setMessage","log","corePath","setLogger","type","ratio","setTimeout","onFileUploaded","files","file","Uint8Array","isLoaded","load","FS","start","Date","now","run","data","listDir","URL","createObjectURL","Blob","buffer","length","display","join"],"sources":["/Users/ekaterinapavlova/PycharmProjects/onix/ffmpegwasm.github.io/src/components/FFmpeg.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\nlet ffmpeg = null;\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '48px 0px 48px 0px',\n  },\n  progress: {\n    width: '100%',\n  },\n});\n\nconst readFromBlobOrFile = (blob) => (\n  new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = ({ target: { error: { code } } }) => {\n      reject(Error(`File could not be read! Code=${code}`));\n    };\n    fileReader.readAsArrayBuffer(blob);\n  })\n);\n\nfunction CircularProgressWithLabel(props) {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress variant=\"static\" {...props} />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nfunction FFmpeg({ args, inFilename, outFilename, mediaType }) {\n  const classes = useStyles();\n  const [videoSrc, setVideoSrc] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    if (ffmpeg === null) {\n      ffmpeg = createFFmpeg({\n        log: true,\n        corePath: './static/js/ffmpeg-core.js',\n        // corePath: 'https://unpkg.com/@ffmpeg/core@0.8.3/dist/ffmpeg-core.js',\n      });\n    }\n    ffmpeg.setLogger(({ type, message }) => {\n      if (type !== 'info') {\n        setMessage(message);\n      }\n    });\n    ffmpeg.setProgress(({ ratio }) => {\n      if (ratio >= 0 && ratio <= 1) {\n        setProgress(ratio * 100);\n      }\n      if (ratio === 1) {\n        setTimeout(() => { setProgress(0); }, 1000);\n      }\n    });\n  });\n  const onFileUploaded = async ({ target: { files } }) => {\n    const file = new Uint8Array(await readFromBlobOrFile(files[0]));\n    setMessage('Loading FFmpeg.wasm');\n    if (!ffmpeg.isLoaded()) {\n      setMessage('Loading ffmpeg.wasm-core, may take few minutes');\n      await ffmpeg.load();\n    }\n    ffmpeg.FS('writeFile', inFilename, await fetchFile(file));\n    setMessage('Start to run command');\n    const start = Date.now();\n    await ffmpeg.run(...args);\n    setMessage(`Done in ${Date.now() - start} ms`);\n    const data = ffmpeg.FS('readFile', outFilename);\n    const listDir = ffmpeg.FS(\"readdir\", \"/\");\n      setMessage(listDir);\n\n\n\n\n    setVideoSrc(URL.createObjectURL(new Blob([data.buffer], { type: mediaType })));\n  };\n  return (\n    <Grid className={classes.root} container direction=\"column\" alignItems=\"center\" spacing={2}>\n      {videoSrc.length === 0 ? null : (\n        <Grid item>\n          <video src={videoSrc} autoPlay controls></video>,\n        </Grid>\n      )}\n      <Grid item>\n        {progress !== 0 ? (\n          <CircularProgressWithLabel\n            variant=\"static\"\n            color=\"secondary\"\n            value={progress}\n          />\n        ) : (\n          <Button\n            variant=\"contained\"\n            component=\"label\"\n            color=\"secondary\"\n          >\n            Upload a Video/Audio File\n            <input\n              type=\"file\"\n              style={{ display: 'none' }}\n              onChange={onFileUploaded}\n            />\n          </Button>\n        )}\n      </Grid>\n      <Grid item>\n        <Typography align=\"center\">\n          {`$ ffmpeg ${args.join(' ')}`}\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Typography align=\"center\">\n          {message}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default FFmpeg;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}