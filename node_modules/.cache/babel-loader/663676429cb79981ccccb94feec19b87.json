{"ast":null,"code":"module.exports = function (Core, args) {\n  var argsPtr = Core._malloc(args.length * Uint32Array.BYTES_PER_ELEMENT);\n\n  args.forEach(function (s, idx) {\n    var buf = Core._malloc(s.length + 1);\n\n    Core.writeAsciiToMemory(s, buf);\n    Core.setValue(argsPtr + Uint32Array.BYTES_PER_ELEMENT * idx, buf, 'i32');\n  });\n  return [args.length, argsPtr];\n};","map":{"version":3,"names":["module","exports","Core","args","argsPtr","_malloc","length","Uint32Array","BYTES_PER_ELEMENT","forEach","s","idx","buf","writeAsciiToMemory","setValue"],"sources":["/Users/ekaterinapavlova/PycharmProjects/onix/ffmpegwasm.github.io/node_modules/@ffmpeg/ffmpeg/src/utils/parseArgs.js"],"sourcesContent":["module.exports = (Core, args) => {\n  const argsPtr = Core._malloc(args.length * Uint32Array.BYTES_PER_ELEMENT);\n  args.forEach((s, idx) => {\n    const buf = Core._malloc(s.length + 1);\n    Core.writeAsciiToMemory(s, buf);\n    Core.setValue(argsPtr + (Uint32Array.BYTES_PER_ELEMENT * idx), buf, 'i32');\n  });\n  return [args.length, argsPtr];\n};\n"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAOC,IAAP,EAAgB;EAC/B,IAAMC,OAAO,GAAGF,IAAI,CAACG,OAAL,CAAaF,IAAI,CAACG,MAAL,GAAcC,WAAW,CAACC,iBAAvC,CAAhB;;EACAL,IAAI,CAACM,OAAL,CAAa,UAACC,CAAD,EAAIC,GAAJ,EAAY;IACvB,IAAMC,GAAG,GAAGV,IAAI,CAACG,OAAL,CAAaK,CAAC,CAACJ,MAAF,GAAW,CAAxB,CAAZ;;IACAJ,IAAI,CAACW,kBAAL,CAAwBH,CAAxB,EAA2BE,GAA3B;IACAV,IAAI,CAACY,QAAL,CAAcV,OAAO,GAAIG,WAAW,CAACC,iBAAZ,GAAgCG,GAAzD,EAA+DC,GAA/D,EAAoE,KAApE;EACD,CAJD;EAKA,OAAO,CAACT,IAAI,CAACG,MAAN,EAAcF,OAAd,CAAP;AACD,CARD"},"metadata":{},"sourceType":"script"}