{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/ekaterinapavlova/PycharmProjects/onix/ffmpegwasm.github.io/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"/Users/ekaterinapavlova/PycharmProjects/onix/ffmpegwasm.github.io/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\n/* eslint-disable no-undef */\nvar resolveURL = require('resolve-url');\n\nvar _require = require('../utils/log'),\n    log = _require.log;\n/*\n * Fetch data from remote URL and convert to blob URL\n * to avoid CORS issue\n */\n\n\nvar toBlobURL = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(url, mimeType) {\n    var buf, blob, blobURL;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            log('info', \"fetch \".concat(url));\n            _context.next = 3;\n            return fetch(url);\n\n          case 3:\n            _context.next = 5;\n            return _context.sent.arrayBuffer();\n\n          case 5:\n            buf = _context.sent;\n            log('info', \"\".concat(url, \" file size = \").concat(buf.byteLength, \" bytes\"));\n            blob = new Blob([buf], {\n              type: mimeType\n            });\n            blobURL = URL.createObjectURL(blob);\n            log('info', \"\".concat(url, \" blob URL = \").concat(blobURL));\n            return _context.abrupt(\"return\", blobURL);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function toBlobURL(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref2) {\n    var _corePath, coreRemotePath, corePath, wasmPath, workerPath;\n\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _corePath = _ref2.corePath;\n\n            if (!(typeof _corePath !== 'string')) {\n              _context2.next = 3;\n              break;\n            }\n\n            throw Error('corePath should be a string!');\n\n          case 3:\n            coreRemotePath = resolveURL(_corePath);\n            _context2.next = 6;\n            return toBlobURL(coreRemotePath, 'application/javascript');\n\n          case 6:\n            corePath = _context2.sent;\n            _context2.next = 9;\n            return toBlobURL(coreRemotePath.replace('ffmpeg-core.js', 'ffmpeg-core.wasm'), 'application/wasm');\n\n          case 9:\n            wasmPath = _context2.sent;\n            _context2.next = 12;\n            return toBlobURL(coreRemotePath.replace('ffmpeg-core.js', 'ffmpeg-core.worker.js'), 'application/javascript');\n\n          case 12:\n            workerPath = _context2.sent;\n\n            if (!(typeof createFFmpegCore === 'undefined')) {\n              _context2.next = 15;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", new Promise(function (resolve) {\n              var script = document.createElement('script');\n\n              var eventHandler = function eventHandler() {\n                script.removeEventListener('load', eventHandler);\n                log('info', 'ffmpeg-core.js script loaded');\n                resolve({\n                  createFFmpegCore: createFFmpegCore,\n                  corePath: corePath,\n                  wasmPath: wasmPath,\n                  workerPath: workerPath\n                });\n              };\n\n              script.src = corePath;\n              script.type = 'text/javascript';\n              script.addEventListener('load', eventHandler);\n              document.getElementsByTagName('head')[0].appendChild(script);\n            }));\n\n          case 15:\n            log('info', 'ffmpeg-core.js script is loaded already');\n            return _context2.abrupt(\"return\", Promise.resolve({\n              createFFmpegCore: createFFmpegCore,\n              corePath: corePath,\n              wasmPath: wasmPath,\n              workerPath: workerPath\n            }));\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["resolveURL","require","log","toBlobURL","url","mimeType","fetch","arrayBuffer","buf","byteLength","blob","Blob","type","blobURL","URL","createObjectURL","module","exports","_corePath","corePath","Error","coreRemotePath","replace","wasmPath","workerPath","createFFmpegCore","Promise","resolve","script","document","createElement","eventHandler","removeEventListener","src","addEventListener","getElementsByTagName","appendChild"],"sources":["/Users/ekaterinapavlova/PycharmProjects/onix/ffmpegwasm.github.io/node_modules/@ffmpeg/ffmpeg/src/browser/getCreateFFmpegCore.js"],"sourcesContent":["/* eslint-disable no-undef */\nconst resolveURL = require('resolve-url');\nconst { log } = require('../utils/log');\n\n/*\n * Fetch data from remote URL and convert to blob URL\n * to avoid CORS issue\n */\nconst toBlobURL = async (url, mimeType) => {\n  log('info', `fetch ${url}`);\n  const buf = await (await fetch(url)).arrayBuffer();\n  log('info', `${url} file size = ${buf.byteLength} bytes`);\n  const blob = new Blob([buf], { type: mimeType });\n  const blobURL = URL.createObjectURL(blob);\n  log('info', `${url} blob URL = ${blobURL}`);\n  return blobURL;\n};\n\nmodule.exports = async ({ corePath: _corePath }) => {\n  if (typeof _corePath !== 'string') {\n    throw Error('corePath should be a string!');\n  }\n  const coreRemotePath = resolveURL(_corePath);\n  const corePath = await toBlobURL(\n    coreRemotePath,\n    'application/javascript',\n  );\n  const wasmPath = await toBlobURL(\n    coreRemotePath.replace('ffmpeg-core.js', 'ffmpeg-core.wasm'),\n    'application/wasm',\n  );\n  const workerPath = await toBlobURL(\n    coreRemotePath.replace('ffmpeg-core.js', 'ffmpeg-core.worker.js'),\n    'application/javascript',\n  );\n  if (typeof createFFmpegCore === 'undefined') {\n    return new Promise((resolve) => {\n      const script = document.createElement('script');\n      const eventHandler = () => {\n        script.removeEventListener('load', eventHandler);\n        log('info', 'ffmpeg-core.js script loaded');\n        resolve({\n          createFFmpegCore,\n          corePath,\n          wasmPath,\n          workerPath,\n        });\n      };\n      script.src = corePath;\n      script.type = 'text/javascript';\n      script.addEventListener('load', eventHandler);\n      document.getElementsByTagName('head')[0].appendChild(script);\n    });\n  }\n  log('info', 'ffmpeg-core.js script is loaded already');\n  return Promise.resolve({\n    createFFmpegCore,\n    corePath,\n    wasmPath,\n    workerPath,\n  });\n};\n"],"mappings":";;;;AAAA;AACA,IAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,eAAgBA,OAAO,CAAC,cAAD,CAAvB;AAAA,IAAQC,GAAR,YAAQA,GAAR;AAEA;AACA;AACA;AACA;;;AACA,IAAMC,SAAS;EAAA,sEAAG,iBAAOC,GAAP,EAAYC,QAAZ;IAAA;IAAA;MAAA;QAAA;UAAA;YAChBH,GAAG,CAAC,MAAD,kBAAkBE,GAAlB,EAAH;YADgB;YAAA,OAESE,KAAK,CAACF,GAAD,CAFd;;UAAA;YAAA;YAAA,qBAEqBG,WAFrB;;UAAA;YAEVC,GAFU;YAGhBN,GAAG,CAAC,MAAD,YAAYE,GAAZ,0BAA+BI,GAAG,CAACC,UAAnC,YAAH;YACMC,IAJU,GAIH,IAAIC,IAAJ,CAAS,CAACH,GAAD,CAAT,EAAgB;cAAEI,IAAI,EAAEP;YAAR,CAAhB,CAJG;YAKVQ,OALU,GAKAC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CALA;YAMhBR,GAAG,CAAC,MAAD,YAAYE,GAAZ,yBAA8BS,OAA9B,EAAH;YANgB,iCAOTA,OAPS;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAATV,SAAS;IAAA;EAAA;AAAA,GAAf;;AAUAa,MAAM,CAACC,OAAP;EAAA,uEAAiB;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAmBC,SAAnB,SAASC,QAAT;;YAAA,MACX,OAAOD,SAAP,KAAqB,QADV;cAAA;cAAA;YAAA;;YAAA,MAEPE,KAAK,CAAC,8BAAD,CAFE;;UAAA;YAITC,cAJS,GAIQrB,UAAU,CAACkB,SAAD,CAJlB;YAAA;YAAA,OAKQf,SAAS,CAC9BkB,cAD8B,EAE9B,wBAF8B,CALjB;;UAAA;YAKTF,QALS;YAAA;YAAA,OASQhB,SAAS,CAC9BkB,cAAc,CAACC,OAAf,CAAuB,gBAAvB,EAAyC,kBAAzC,CAD8B,EAE9B,kBAF8B,CATjB;;UAAA;YASTC,QATS;YAAA;YAAA,OAaUpB,SAAS,CAChCkB,cAAc,CAACC,OAAf,CAAuB,gBAAvB,EAAyC,uBAAzC,CADgC,EAEhC,wBAFgC,CAbnB;;UAAA;YAaTE,UAbS;;YAAA,MAiBX,OAAOC,gBAAP,KAA4B,WAjBjB;cAAA;cAAA;YAAA;;YAAA,kCAkBN,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;cAC9B,IAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;;cACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;gBACzBH,MAAM,CAACI,mBAAP,CAA2B,MAA3B,EAAmCD,YAAnC;gBACA7B,GAAG,CAAC,MAAD,EAAS,8BAAT,CAAH;gBACAyB,OAAO,CAAC;kBACNF,gBAAgB,EAAhBA,gBADM;kBAENN,QAAQ,EAARA,QAFM;kBAGNI,QAAQ,EAARA,QAHM;kBAINC,UAAU,EAAVA;gBAJM,CAAD,CAAP;cAMD,CATD;;cAUAI,MAAM,CAACK,GAAP,GAAad,QAAb;cACAS,MAAM,CAAChB,IAAP,GAAc,iBAAd;cACAgB,MAAM,CAACM,gBAAP,CAAwB,MAAxB,EAAgCH,YAAhC;cACAF,QAAQ,CAACM,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDR,MAArD;YACD,CAhBM,CAlBM;;UAAA;YAoCf1B,GAAG,CAAC,MAAD,EAAS,yCAAT,CAAH;YApCe,kCAqCRwB,OAAO,CAACC,OAAR,CAAgB;cACrBF,gBAAgB,EAAhBA,gBADqB;cAErBN,QAAQ,EAARA,QAFqB;cAGrBI,QAAQ,EAARA,QAHqB;cAIrBC,UAAU,EAAVA;YAJqB,CAAhB,CArCQ;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAjB;;EAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"script"}