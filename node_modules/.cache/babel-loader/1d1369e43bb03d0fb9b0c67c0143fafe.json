{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _omggif = _interopRequireDefault(require(\"omggif\"));\n\nvar _gifwrap = require(\"gifwrap\");\n\nvar MIME_TYPE = 'image/gif';\n\nvar _default = function _default() {\n  return {\n    mime: (0, _defineProperty2[\"default\"])({}, MIME_TYPE, ['gif']),\n    constants: {\n      MIME_GIF: MIME_TYPE\n    },\n    decoders: (0, _defineProperty2[\"default\"])({}, MIME_TYPE, function (data) {\n      var gifObj = new _omggif[\"default\"].GifReader(data);\n      var gifData = Buffer.alloc(gifObj.width * gifObj.height * 4);\n      gifObj.decodeAndBlitFrameRGBA(0, gifData);\n      return {\n        data: gifData,\n        width: gifObj.width,\n        height: gifObj.height\n      };\n    }),\n    encoders: (0, _defineProperty2[\"default\"])({}, MIME_TYPE, function (data) {\n      var bitmap = new _gifwrap.BitmapImage(data.bitmap);\n\n      _gifwrap.GifUtil.quantizeDekker(bitmap, 256);\n\n      var newFrame = new _gifwrap.GifFrame(bitmap);\n      var gifCodec = new _gifwrap.GifCodec();\n      return gifCodec.encodeGif([newFrame], {}).then(function (newGif) {\n        return newGif.buffer;\n      });\n    })\n  };\n};\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../src/index.js"],"names":["MIME_TYPE","mime","constants","MIME_GIF","decoders","gifObj","GIF","gifData","Buffer","data","width","height","encoders","bitmap","BitmapImage","GifUtil","newFrame","GifFrame","gifCodec","GifCodec","newGif"],"mappings":";;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,IAAMA,SAAS,GAAf,WAAA;;eAEe,SAAA,QAAA,GAAA;EAAA,OAAO;IACpBC,IAAI,EAAA,CAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,SAAA,EAAiB,CADD,KACC,CAAjB,CADgB;IAGpBC,SAAS,EAAE;MACTC,QAAQ,EAAEH;IADD,CAHS;IAOpBI,QAAQ,EAAA,CAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,SAAA,EACO,UAAA,IAAA,EAAQ;MACnB,IAAMC,MAAM,GAAG,IAAIC,OAAAA,CAAAA,SAAAA,CAAAA,CAAJ,SAAA,CAAf,IAAe,CAAf;MACA,IAAMC,OAAO,GAAGC,MAAM,CAANA,KAAAA,CAAaH,MAAM,CAANA,KAAAA,GAAeA,MAAM,CAArBA,MAAAA,GAA7B,CAAgBG,CAAhB;MAEAH,MAAM,CAANA,sBAAAA,CAAAA,CAAAA,EAAAA,OAAAA;MAEA,OAAO;QACLI,IAAI,EADC,OAAA;QAELC,KAAK,EAAEL,MAAM,CAFR,KAAA;QAGLM,MAAM,EAAEN,MAAM,CAACM;MAHV,CAAP;IAdgB,CAOZ,CAPY;IAsBpBC,QAAQ,EAAA,CAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,SAAA,EACO,UAAA,IAAA,EAAQ;MACnB,IAAMC,MAAM,GAAG,IAAIC,QAAAA,CAAJ,WAAA,CAAgBL,IAAI,CAAnC,MAAe,CAAf;;MACAM,QAAAA,CAAAA,OAAAA,CAAAA,cAAAA,CAAAA,MAAAA,EAAAA,GAAAA;;MACA,IAAMC,QAAQ,GAAG,IAAIC,QAAAA,CAAJ,QAAA,CAAjB,MAAiB,CAAjB;MACA,IAAMC,QAAQ,GAAG,IAAIC,QAAAA,CAArB,QAAiB,EAAjB;MACA,OAAO,QAAQ,CAAR,SAAA,CAAmB,CAAnB,QAAmB,CAAnB,EAAA,EAAA,EAAA,IAAA,CAAwC,UAAA,MAAA,EAAU;QACvD,OAAOC,MAAM,CAAb,MAAA;MADF,CAAO,CAAP;IANI,CAAA;EAtBY,CAAP","sourcesContent":["import GIF from 'omggif';\nimport { GifUtil, GifFrame, BitmapImage, GifCodec } from 'gifwrap';\n\nconst MIME_TYPE = 'image/gif';\n\nexport default () => ({\n  mime: { [MIME_TYPE]: ['gif'] },\n\n  constants: {\n    MIME_GIF: MIME_TYPE\n  },\n\n  decoders: {\n    [MIME_TYPE]: data => {\n      const gifObj = new GIF.GifReader(data);\n      const gifData = Buffer.alloc(gifObj.width * gifObj.height * 4);\n\n      gifObj.decodeAndBlitFrameRGBA(0, gifData);\n\n      return {\n        data: gifData,\n        width: gifObj.width,\n        height: gifObj.height\n      };\n    }\n  },\n\n  encoders: {\n    [MIME_TYPE]: data => {\n      const bitmap = new BitmapImage(data.bitmap);\n      GifUtil.quantizeDekker(bitmap, 256);\n      const newFrame = new GifFrame(bitmap);\n      const gifCodec = new GifCodec();\n      return gifCodec.encodeGif([newFrame], {}).then(newGif => {\n        return newGif.buffer;\n      });\n    }\n  }\n});\n"]},"metadata":{},"sourceType":"script"}