{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterinapavlova/PycharmProjects/onix/ffmpegwasm.github.io/src/Libraries.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LibCard from './components/LibCard';\nimport x264 from './assets/x264.png';\nimport x265 from './assets/x265.webp';\nimport libvpx from './assets/libvpx.png';\nimport theora from './assets/theora.png';\nimport wavpack from './assets/wavpack.gif';\nimport lame from './assets/lame.gif';\nimport fdkaac from \"./assets/fdk-aac.svg\";\nimport vorbis from './assets/vorbis.png';\nimport freetype from './assets/freetype.png';\nimport opus from './assets/opus.png';\nimport webp from './assets/webp.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ISSUE_LINK = 'https://github.com/ffmpegwasm/ffmpeg.wasm/issues/61';\nconst EXTERNAL_LIBS = [{\n  img: x264,\n  title: 'x264',\n  desc: 'H.264 codec'\n}, {\n  img: x265,\n  title: 'x265',\n  desc: 'H.265 codec'\n}, {\n  img: libvpx,\n  title: 'libvpx',\n  desc: 'VP8/VP9 codec'\n}, {\n  img: theora,\n  title: 'theora',\n  desc: 'OGV codec'\n}, {\n  img: wavpack,\n  title: 'wavpack',\n  desc: 'WAV/WV codec'\n}, {\n  img: lame,\n  title: 'lame',\n  desc: 'MP3 codec'\n}, {\n  img: fdkaac,\n  title: 'fdk-aac',\n  desc: 'AAC codec'\n}, {\n  img: vorbis,\n  title: 'vorbis',\n  desc: 'OGG codec'\n}, {\n  img: opus,\n  title: 'opus',\n  desc: 'OPUS codec'\n}, {\n  img: freetype,\n  title: 'freetype2',\n  desc: 'Font file renderer'\n}, {\n  img: freetype,\n  title: 'libass',\n  desc: 'subtitle renderer'\n}, {\n  img: webp,\n  title: 'libwebp',\n  desc: 'WEBP codec'\n}];\nconst useStyles = makeStyles({\n  root: {\n    margin: '0px 0px 48px 0px'\n  },\n  desc: {\n    margin: '8px 0px 24px 0px'\n  }\n});\n\nfunction Libraries() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.root,\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"External Libraries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.desc,\n      variant: \"h6\",\n      children: [\"ffmpeg.wasm is built with common external libraries, and more of libraries to be added! (You can request them \", /*#__PURE__*/_jsxDEV(Link, {\n        href: ISSUE_LINK,\n        color: \"primary\",\n        target: \"_blank\",\n        rel: \"noopener\",\n        children: \"HERE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 31\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      justify: \"center\",\n      spacing: 4,\n      children: EXTERNAL_LIBS.map(_ref => {\n        let {\n          img,\n          title,\n          desc\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LibCard, {\n            img: img,\n            title: title,\n            desc: desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Libraries, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Libraries;\nexport default Libraries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Libraries\");","map":{"version":3,"names":["React","Grid","Typography","Link","makeStyles","LibCard","x264","x265","libvpx","theora","wavpack","lame","vorbis","freetype","opus","webp","ISSUE_LINK","EXTERNAL_LIBS","img","title","desc","fdkaac","useStyles","root","margin","Libraries","classes","map"],"sources":["/Users/ekaterinapavlova/PycharmProjects/onix/ffmpegwasm.github.io/src/Libraries.js"],"sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LibCard from './components/LibCard';\nimport x264 from './assets/x264.png';\nimport x265 from './assets/x265.webp';\nimport libvpx from './assets/libvpx.png';\nimport theora from './assets/theora.png';\nimport wavpack from './assets/wavpack.gif';\nimport lame from './assets/lame.gif';\nimport fdkaac from './assets/fdk-aac.svg';\nimport vorbis from './assets/vorbis.png';\nimport freetype from './assets/freetype.png';\nimport opus from './assets/opus.png';\nimport webp from './assets/webp.png';\n\nconst ISSUE_LINK = 'https://github.com/ffmpegwasm/ffmpeg.wasm/issues/61';\n\nconst EXTERNAL_LIBS = [\n  {\n    img: x264,\n    title: 'x264',\n    desc: 'H.264 codec',\n  },\n  {\n    img: x265,\n    title: 'x265',\n    desc: 'H.265 codec',\n  },\n  {\n    img: libvpx,\n    title: 'libvpx',\n    desc: 'VP8/VP9 codec',\n  },\n  {\n    img: theora,\n    title: 'theora',\n    desc: 'OGV codec',\n  },\n  {\n    img: wavpack,\n    title: 'wavpack',\n    desc: 'WAV/WV codec',\n  },\n  {\n    img: lame,\n    title: 'lame',\n    desc: 'MP3 codec',\n  },\n  {\n    img: fdkaac,\n    title: 'fdk-aac',\n    desc: 'AAC codec',\n  },\n  {\n    img: vorbis,\n    title: 'vorbis',\n    desc: 'OGG codec',\n  },\n  {\n    img: opus,\n    title: 'opus',\n    desc: 'OPUS codec',\n  },\n  {\n    img: freetype,\n    title: 'freetype2',\n    desc: 'Font file renderer',\n  },\n  {\n    img: freetype,\n    title: 'libass',\n    desc: 'subtitle renderer',\n  },\n  {\n    img: webp,\n    title: 'libwebp',\n    desc: 'WEBP codec',\n  },\n];\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '0px 0px 48px 0px',\n  },\n  desc: {\n    margin: '8px 0px 24px 0px',\n  },\n});\n\nfunction Libraries() {\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.root} container direction=\"column\" alignItems=\"center\">\n      <Typography variant=\"h4\">\n        External Libraries\n      </Typography>\n      <Typography className={classes.desc} variant=\"h6\">\n        ffmpeg.wasm is built with common external libraries, and more of libraries to be added!\n        (You can request them <Link href={ISSUE_LINK} color=\"primary\" target=\"_blank\" rel=\"noopener\">HERE</Link>)\n      </Typography>\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={4}>\n        {\n          EXTERNAL_LIBS.map(({ img, title, desc }) => (\n            <Grid item key={title}>\n              <LibCard\n                img={img}\n                title={title}\n                desc={desc}\n              />\n            </Grid>\n          ))\n        }\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Libraries;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}