{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterinapavlova/PycharmProjects/onix/ffmpegwasm.github.io/src/Installation.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport vsDark from 'prism-react-renderer/themes/vsDark';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NPM_INSTALL_SCRIPTS = `\n# Use npm\n$ npm install @ffmpeg/ffmpeg @ffmpeg/core\n# Use yarn\n$ yarn add @ffmpeg/ffmpeg @ffmpeg/core\n`.trim('\\n'); // const NPM_CORE_INSTALL_SCRIPTS=`\n// # Use npm\n// $ npm install @ffmpeg/core\n// # Use yarn\n// $ yarn add @ffmpeg/core\n// `.trim('\\n');\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '48px 0px 48px 0px'\n  },\n  para: {\n    margin: '24px 0px 24px 0px'\n  }\n});\n\nfunction ReadOnlyEditor(props) {\n  return /*#__PURE__*/_jsxDEV(Highlight, { ...defaultProps,\n    theme: vsDark,\n    ...props,\n    children: _ref => {\n      let {\n        tokens,\n        getLineProps,\n        getTokenProps\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          fontSize: 18\n        },\n        children: tokens.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", { ...getLineProps({\n            line,\n            key: i\n          }),\n          children: line.map((token, key) => /*#__PURE__*/_jsxDEV(\"span\", { ...getTokenProps({\n              token,\n              key\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ReadOnlyEditor;\n\nfunction Installation() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.root,\n    container: true,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      align: \"center\",\n      variant: \"h4\",\n      children: \"Installation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.para,\n      variant: \"h6\",\n      children: \"Install ffmpeg.wasm:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReadOnlyEditor, {\n      language: \"bash\",\n      code: NPM_INSTALL_SCRIPTS\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Installation, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Installation;\nexport default Installation;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReadOnlyEditor\");\n$RefreshReg$(_c2, \"Installation\");","map":{"version":3,"names":["React","Grid","Typography","makeStyles","Highlight","defaultProps","vsDark","NPM_INSTALL_SCRIPTS","trim","useStyles","root","margin","para","ReadOnlyEditor","props","tokens","getLineProps","getTokenProps","fontSize","map","line","i","key","token","Installation","classes"],"sources":["/Users/ekaterinapavlova/PycharmProjects/onix/ffmpegwasm.github.io/src/Installation.js"],"sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport vsDark from 'prism-react-renderer/themes/vsDark';\n\nconst NPM_INSTALL_SCRIPTS=`\n# Use npm\n$ npm install @ffmpeg/ffmpeg @ffmpeg/core\n# Use yarn\n$ yarn add @ffmpeg/ffmpeg @ffmpeg/core\n`.trim('\\n');\n\n// const NPM_CORE_INSTALL_SCRIPTS=`\n// # Use npm\n// $ npm install @ffmpeg/core\n// # Use yarn\n// $ yarn add @ffmpeg/core\n// `.trim('\\n');\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '48px 0px 48px 0px',\n  },\n  para: {\n    margin: '24px 0px 24px 0px',\n  },\n});\n\nfunction ReadOnlyEditor(props) {\n  return (\n    <Highlight {...defaultProps} theme={vsDark} {...props}>\n      {({ tokens, getLineProps, getTokenProps }) => (\n        <pre style={{fontSize: 18}}>\n          {tokens.map((line, i) => (\n            <div {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  );\n}\n\nfunction Installation() {\n  const classes = useStyles();\n  return (\n    <Grid className={classes.root} container direction=\"column\" >\n      <Typography align=\"center\" variant=\"h4\">\n        Installation\n      </Typography>\n      <Typography className={classes.para} variant=\"h6\">\n        Install ffmpeg.wasm:\n      </Typography>\n      <ReadOnlyEditor\n        language=\"bash\"\n        code={NPM_INSTALL_SCRIPTS}\n      />\n      {/*\n      <Typography className={classes.para} variant=\"h6\">\n        If you want to use it in node.js, you need to install @ffmpeg/core as well.\n      </Typography>\n      <ReadOnlyEditor\n        language=\"bash\"\n        code={NPM_CORE_INSTALL_SCRIPTS}\n      />\n      */}\n    </Grid>\n  );\n}\n\nexport default Installation;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,IAAoBC,YAApB,QAAwC,sBAAxC;AACA,OAAOC,MAAP,MAAmB,oCAAnB;;AAEA,MAAMC,mBAAmB,GAAE;AAC3B;AACA;AACA;AACA;AACA,CAL0B,CAKxBC,IALwB,CAKnB,IALmB,CAA1B,C,CAOA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAC;EAC3BO,IAAI,EAAE;IACJC,MAAM,EAAE;EADJ,CADqB;EAI3BC,IAAI,EAAE;IACJD,MAAM,EAAE;EADJ;AAJqB,CAAD,CAA5B;;AASA,SAASE,cAAT,CAAwBC,KAAxB,EAA+B;EAC7B,oBACE,QAAC,SAAD,OAAeT,YAAf;IAA6B,KAAK,EAAEC,MAApC;IAAA,GAAgDQ,KAAhD;IAAA,UACG;MAAA,IAAC;QAAEC,MAAF;QAAUC,YAAV;QAAwBC;MAAxB,CAAD;MAAA,oBACC;QAAK,KAAK,EAAE;UAACC,QAAQ,EAAE;QAAX,CAAZ;QAAA,UACGH,MAAM,CAACI,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,kBACV,oBAASL,YAAY,CAAC;YAAEI,IAAF;YAAQE,GAAG,EAAED;UAAb,CAAD,CAArB;UAAA,UACGD,IAAI,CAACD,GAAL,CAAS,CAACI,KAAD,EAAQD,GAAR,kBACR,qBAAUL,aAAa,CAAC;cAAEM,KAAF;cAASD;YAAT,CAAD;UAAvB;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QADD;IAAA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;KAhBQT,c;;AAkBT,SAASW,YAAT,GAAwB;EAAA;;EACtB,MAAMC,OAAO,GAAGhB,SAAS,EAAzB;EACA,oBACE,QAAC,IAAD;IAAM,SAAS,EAAEgB,OAAO,CAACf,IAAzB;IAA+B,SAAS,MAAxC;IAAyC,SAAS,EAAC,QAAnD;IAAA,wBACE,QAAC,UAAD;MAAY,KAAK,EAAC,QAAlB;MAA2B,OAAO,EAAC,IAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,UAAD;MAAY,SAAS,EAAEe,OAAO,CAACb,IAA/B;MAAqC,OAAO,EAAC,IAA7C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAOE,QAAC,cAAD;MACE,QAAQ,EAAC,MADX;MAEE,IAAI,EAAEL;IAFR;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD;;GAzBQiB,Y;UACSf,S;;;MADTe,Y;AA2BT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}