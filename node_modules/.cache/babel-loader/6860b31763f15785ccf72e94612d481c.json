{"ast":null,"code":"import _objectSpread from\"/Users/ekaterinapavlova/PycharmProjects/onix/ffmpegwasm.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import{makeStyles}from'@material-ui/core/styles';import Highlight,{defaultProps}from'prism-react-renderer';import vsDark from'prism-react-renderer/themes/vsDark';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NPM_INSTALL_SCRIPTS=\"\\n# Use npm\\n$ npm install @ffmpeg/ffmpeg @ffmpeg/core\\n# Use yarn\\n$ yarn add @ffmpeg/ffmpeg @ffmpeg/core\\n\".trim('\\n');// const NPM_CORE_INSTALL_SCRIPTS=`\n// # Use npm\n// $ npm install @ffmpeg/core\n// # Use yarn\n// $ yarn add @ffmpeg/core\n// `.trim('\\n');\nvar useStyles=makeStyles({root:{margin:'48px 0px 48px 0px'},para:{margin:'24px 0px 24px 0px'}});function ReadOnlyEditor(props){return/*#__PURE__*/_jsx(Highlight,_objectSpread(_objectSpread(_objectSpread({},defaultProps),{},{theme:vsDark},props),{},{children:function children(_ref){var tokens=_ref.tokens,getLineProps=_ref.getLineProps,getTokenProps=_ref.getTokenProps;return/*#__PURE__*/_jsx(\"pre\",{style:{fontSize:18},children:tokens.map(function(line,i){return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({},getLineProps({line:line,key:i})),{},{children:line.map(function(token,key){return/*#__PURE__*/_jsx(\"span\",_objectSpread({},getTokenProps({token:token,key:key})));})}));})});}}));}function Installation(){var classes=useStyles();return/*#__PURE__*/_jsxs(Grid,{className:classes.root,container:true,direction:\"column\",children:[/*#__PURE__*/_jsx(Typography,{align:\"center\",variant:\"h4\",children:\"Installation\"}),/*#__PURE__*/_jsx(Typography,{className:classes.para,variant:\"h6\",children:\"Install ffmpeg.wasm:\"}),/*#__PURE__*/_jsx(ReadOnlyEditor,{language:\"bash\",code:NPM_INSTALL_SCRIPTS})]});}export default Installation;","map":{"version":3,"names":["React","Grid","Typography","makeStyles","Highlight","defaultProps","vsDark","NPM_INSTALL_SCRIPTS","trim","useStyles","root","margin","para","ReadOnlyEditor","props","tokens","getLineProps","getTokenProps","fontSize","map","line","i","key","token","Installation","classes"],"sources":["/Users/ekaterinapavlova/PycharmProjects/onix/ffmpegwasm.github.io/src/Installation.js"],"sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport vsDark from 'prism-react-renderer/themes/vsDark';\n\nconst NPM_INSTALL_SCRIPTS=`\n# Use npm\n$ npm install @ffmpeg/ffmpeg @ffmpeg/core\n# Use yarn\n$ yarn add @ffmpeg/ffmpeg @ffmpeg/core\n`.trim('\\n');\n\n// const NPM_CORE_INSTALL_SCRIPTS=`\n// # Use npm\n// $ npm install @ffmpeg/core\n// # Use yarn\n// $ yarn add @ffmpeg/core\n// `.trim('\\n');\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '48px 0px 48px 0px',\n  },\n  para: {\n    margin: '24px 0px 24px 0px',\n  },\n});\n\nfunction ReadOnlyEditor(props) {\n  return (\n    <Highlight {...defaultProps} theme={vsDark} {...props}>\n      {({ tokens, getLineProps, getTokenProps }) => (\n        <pre style={{fontSize: 18}}>\n          {tokens.map((line, i) => (\n            <div {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  );\n}\n\nfunction Installation() {\n  const classes = useStyles();\n  return (\n    <Grid className={classes.root} container direction=\"column\" >\n      <Typography align=\"center\" variant=\"h4\">\n        Installation\n      </Typography>\n      <Typography className={classes.para} variant=\"h6\">\n        Install ffmpeg.wasm:\n      </Typography>\n      <ReadOnlyEditor\n        language=\"bash\"\n        code={NPM_INSTALL_SCRIPTS}\n      />\n      {/*\n      <Typography className={classes.para} variant=\"h6\">\n        If you want to use it in node.js, you need to install @ffmpeg/core as well.\n      </Typography>\n      <ReadOnlyEditor\n        language=\"bash\"\n        code={NPM_CORE_INSTALL_SCRIPTS}\n      />\n      */}\n    </Grid>\n  );\n}\n\nexport default Installation;\n"],"mappings":"sJAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,KAAP,KAAiB,wBAAjB,CACA,MAAOC,WAAP,KAAuB,8BAAvB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,UAAP,EAAoBC,YAApB,KAAwC,sBAAxC,CACA,MAAOC,OAAP,KAAmB,oCAAnB,C,wFAEA,GAAMC,oBAAmB,CAAC,+GAKxBC,IALwB,CAKnB,IALmB,CAA1B,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,UAAS,CAAGN,UAAU,CAAC,CAC3BO,IAAI,CAAE,CACJC,MAAM,CAAE,mBADJ,CADqB,CAI3BC,IAAI,CAAE,CACJD,MAAM,CAAE,mBADJ,CAJqB,CAAD,CAA5B,CASA,QAASE,eAAT,CAAwBC,KAAxB,CAA+B,CAC7B,mBACE,KAAC,SAAD,8CAAeT,YAAf,MAA6B,KAAK,CAAEC,MAApC,EAAgDQ,KAAhD,eACG,2BAAGC,OAAH,MAAGA,MAAH,CAAWC,YAAX,MAAWA,YAAX,CAAyBC,aAAzB,MAAyBA,aAAzB,oBACC,YAAK,KAAK,CAAE,CAACC,QAAQ,CAAE,EAAX,CAAZ,UACGH,MAAM,CAACI,GAAP,CAAW,SAACC,IAAD,CAAOC,CAAP,qBACV,0CAASL,YAAY,CAAC,CAAEI,IAAI,CAAJA,IAAF,CAAQE,GAAG,CAAED,CAAb,CAAD,CAArB,eACGD,IAAI,CAACD,GAAL,CAAS,SAACI,KAAD,CAAQD,GAAR,qBACR,6BAAUL,aAAa,CAAC,CAAEM,KAAK,CAALA,KAAF,CAASD,GAAG,CAAHA,GAAT,CAAD,CAAvB,EADQ,EAAT,CADH,GADU,EAAX,CADH,EADD,EADH,GADF,CAeD,CAED,QAASE,aAAT,EAAwB,CACtB,GAAMC,QAAO,CAAGhB,SAAS,EAAzB,CACA,mBACE,MAAC,IAAD,EAAM,SAAS,CAAEgB,OAAO,CAACf,IAAzB,CAA+B,SAAS,KAAxC,CAAyC,SAAS,CAAC,QAAnD,wBACE,KAAC,UAAD,EAAY,KAAK,CAAC,QAAlB,CAA2B,OAAO,CAAC,IAAnC,0BADF,cAIE,KAAC,UAAD,EAAY,SAAS,CAAEe,OAAO,CAACb,IAA/B,CAAqC,OAAO,CAAC,IAA7C,kCAJF,cAOE,KAAC,cAAD,EACE,QAAQ,CAAC,MADX,CAEE,IAAI,CAAEL,mBAFR,EAPF,GADF,CAuBD,CAED,cAAeiB,aAAf"},"metadata":{},"sourceType":"module"}