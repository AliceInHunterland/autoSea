{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterinapavlova/PycharmProjects/onix/ffmpegwasm.github.io/src/Demo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live';\nimport vsDark from 'prism-react-renderer/themes/vsDark';\nimport FFmpeg from './components/FFmpeg'; // import DemoLinkCard from './components/DemoLinkCard';\n// import codepen from './assets/codepen.png';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TESTDATA_URL = 'https://github.com/ffmpegwasm/testdata';\nconst CONFIGS = {\n  x264: `\n{\n  args: ['-i', 'video.avi', '-c:v', 'libx264', 'video.mp4'],\n  inFilename: 'video.avi',\n  outFilename: 'video.mp4',\n  mediaType: 'video/mp4',\n}`.trim('\\n'),\n  libvpx: `\n{\n\n  args: [ '-i','video.avi','-vf','crop=in_w:in_h-200,scale=960:-1', '-r', '1', '%04d.png'],\n  inFilename: 'video.avi',\n  outFilename: '%04d.png',\n  mediaType: 'image/png',\n}`.trim('\\n'),\n  lame: `\n{\n  args: ['-i', 'audio.wav', '-c:a', 'libmp3lame', 'audio.mp3'],\n  inFilename: 'audio.wav',\n  outFilename: 'audio.mp3',\n  mediaType: 'audio/mp3',\n}`.trim('\\n')\n}; // const CODEPENS = [\n//   {\n//     title: 'WebCam',\n//     url: 'https://codepen.io/jeromewu/details/qBBKzyW',\n//   },\n//   {\n//     title: 'To x264 mp4',\n//     url: 'https://codepen.io/jeromewu/pen/NWWaMeY',\n//   },\n// ];\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '48px 0px 48px 0px'\n  },\n  para: {\n    margin: '16px 0px 24px 0px'\n  }\n});\n\nfunction Demo() {\n  _s();\n\n  const classes = useStyles();\n  const [config, setConfig] = useState('x264');\n\n  const onConfigChanged = evt => {\n    setConfig(evt.target.value);\n  };\n\n  const IS_COMPATIBLE = typeof SharedArrayBuffer === 'function';\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.root,\n    container: true,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      align: \"center\",\n      variant: \"h4\",\n      children: \"Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.para,\n      align: \"center\",\n      variant: \"h6\",\n      children: \"Try ffmpeg.wasm now!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), !IS_COMPATIBLE ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        variant: \"h6\",\n        children: \"Your browser doesn't support SharedArrayBuffer, thus ffmpeg.wasm cannot execute. Please use latest version of Chromium or any other browser supports SharedArrayBuffer.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(LiveProvider, {\n        theme: vsDark,\n        code: CONFIGS[config],\n        scope: {\n          FFmpeg\n        },\n        transformCode: code => `() => { const props=${code}; return <FFmpeg {...props} />;}`,\n        children: [/*#__PURE__*/_jsxDEV(LivePreview, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"space-between\",\n          alignItems: \"flex-end\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Edit the code block below to test your scenario (\", /*#__PURE__*/_jsxDEV(Link, {\n                href: TESTDATA_URL,\n                target: \"_blank\",\n                rel: \"noopener\",\n                color: \"secondary\",\n                children: \"Download Sample Video/Audio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 70\n              }, this), \"):\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"config-select-label\",\n              children: \"Choose a sample config\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"config-select-label\",\n              id: \"config-select\",\n              value: config,\n              onChange: onConfigChanged,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"x264\",\n                children: \"x264 (mp4)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"libvpx\",\n                children: \"libvpx (webm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"lame\",\n                children: \"lame (mp3)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(LiveEditor, {\n          style: {\n            fontSize: 18,\n            marginTop: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(LiveError, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Demo, \"wFocfNcPin/xsSSOPsdhbfdz/Ig=\", false, function () {\n  return [useStyles];\n});\n\n_c = Demo;\nexport default Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["React","useState","Grid","Typography","InputLabel","Select","MenuItem","Link","makeStyles","LiveProvider","LiveEditor","LiveError","LivePreview","vsDark","FFmpeg","TESTDATA_URL","CONFIGS","x264","trim","libvpx","lame","useStyles","root","margin","para","Demo","classes","config","setConfig","onConfigChanged","evt","target","value","IS_COMPATIBLE","SharedArrayBuffer","code","fontSize","marginTop"],"sources":["/Users/ekaterinapavlova/PycharmProjects/onix/ffmpegwasm.github.io/src/Demo.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  LiveProvider,\n  LiveEditor,\n  LiveError,\n  LivePreview,\n} from 'react-live';\nimport vsDark from 'prism-react-renderer/themes/vsDark';\nimport FFmpeg from './components/FFmpeg';\n// import DemoLinkCard from './components/DemoLinkCard';\n// import codepen from './assets/codepen.png';\n\nconst TESTDATA_URL = 'https://github.com/ffmpegwasm/testdata';\n\nconst CONFIGS = {\n  x264: `\n{\n  args: ['-i', 'video.avi', '-c:v', 'libx264', 'video.mp4'],\n  inFilename: 'video.avi',\n  outFilename: 'video.mp4',\n  mediaType: 'video/mp4',\n}`.trim('\\n'),\n  libvpx: `\n{\n\n  args: [ '-i','video.avi','-vf','crop=in_w:in_h-200,scale=960:-1', '-r', '1', '%04d.png'],\n  inFilename: 'video.avi',\n  outFilename: '%04d.png',\n  mediaType: 'image/png',\n}`.trim('\\n'),\n  lame: `\n{\n  args: ['-i', 'audio.wav', '-c:a', 'libmp3lame', 'audio.mp3'],\n  inFilename: 'audio.wav',\n  outFilename: 'audio.mp3',\n  mediaType: 'audio/mp3',\n}`.trim('\\n'),\n};\n\n// const CODEPENS = [\n//   {\n//     title: 'WebCam',\n//     url: 'https://codepen.io/jeromewu/details/qBBKzyW',\n//   },\n//   {\n//     title: 'To x264 mp4',\n//     url: 'https://codepen.io/jeromewu/pen/NWWaMeY',\n//   },\n// ];\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '48px 0px 48px 0px',\n  },\n  para: {\n    margin: '16px 0px 24px 0px',\n  },\n});\n\nfunction Demo() {\n  const classes = useStyles();\n  const [config, setConfig] = useState('x264');\n  const onConfigChanged = (evt) => {\n    setConfig(evt.target.value);\n  };\n  const IS_COMPATIBLE = typeof SharedArrayBuffer === 'function';\n  return (\n    <Grid className={classes.root} container direction=\"column\" >\n      <Typography align=\"center\" variant=\"h4\">\n        Demo\n      </Typography>\n      <Typography className={classes.para} align=\"center\" variant=\"h6\">\n        Try ffmpeg.wasm now!\n      </Typography>\n      {\n        !IS_COMPATIBLE ? (\n          <>\n            <Typography align=\"center\" variant=\"h6\">\n              Your browser doesn't support SharedArrayBuffer, thus ffmpeg.wasm cannot execute. Please use latest version of Chromium or any other browser supports SharedArrayBuffer.\n            </Typography>\n          </>\n        ) : (\n          <>\n            <LiveProvider\n              theme={vsDark}\n              code={CONFIGS[config]}\n              scope={{ FFmpeg }}\n              transformCode={(code) => (\n                `() => { const props=${code}; return <FFmpeg {...props} />;}`\n              )}\n            >\n              <LivePreview />\n              <Grid container justify=\"space-between\" alignItems=\"flex-end\">\n                <Grid item>\n                  <Typography>\n                    Edit the code block below to test your scenario (<Link href={TESTDATA_URL} target=\"_blank\" rel=\"noopener\" color=\"secondary\">Download Sample Video/Audio</Link>):\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <InputLabel id=\"config-select-label\">Choose a sample config</InputLabel>\n                  <Select\n                    labelId=\"config-select-label\"\n                    id=\"config-select\"\n                    value={config}\n                    onChange={onConfigChanged}\n                  >\n                    <MenuItem value=\"x264\">x264 (mp4)</MenuItem>\n                    <MenuItem value=\"libvpx\">libvpx (webm)</MenuItem>\n                    <MenuItem value=\"lame\">lame (mp3)</MenuItem>\n                  </Select>\n                </Grid>\n              </Grid>\n              <LiveEditor style={{ fontSize: 18, marginTop: 8 }}/>\n              <LiveError />\n            </LiveProvider>\n          </>\n        )\n      }\n      {/*\n      <Typography className={classes.para} align=\"center\" variant=\"h6\">\n        Live Demo on CodePen\n      </Typography>\n      <Grid container justify=\"center\" spacing={2}>\n        {\n          CODEPENS.map(({ title, url }) => (\n            <Grid item key={url}>\n              <DemoLinkCard\n                img={codepen}\n                title={title}\n                url={url}\n              />\n            </Grid>\n          ))\n        }\n      </Grid>\n      */}\n    </Grid>\n  );\n}\n\nexport default Demo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}